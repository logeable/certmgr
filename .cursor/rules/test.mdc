---
description: 
globs: *.go,*.ts
alwaysApply: false
---
1. 测试优先：
   - 在编写任何功能代码前，先编写一个失败的单元测试，定义函数/模块的预期行为。

2. 测试框架推荐：
   - 推荐使用 Jest 或 Mocha 作为测试框架。测试文件建议命名为 xxx.test.js，放在与被测代码同目录或 tests 目录下。

3. 测试粒度与命名：
   - 每个测试应聚焦于单一功能点，测试名称需清晰描述验证内容（如“should return error when input is invalid”）。
   - 测试用例可用中英文注释，便于团队理解。

4. Electron/E2E 测试：
   - 对于 Electron 界面或集成流程，建议补充端到端测试，可选用 Spectron、Playwright 等工具。

5. 持续集成与覆盖率：
   - 配置 CI（如 GitHub Actions）自动运行测试。
   - 使用 jest --coverage 或 nyc 统计代码覆盖率，关注关键路径和边界情况。

6. Mock 外部依赖：
   - 使用 jest.mock、sinon 等工具模拟外部依赖（如 API、数据库），保证测试快速、可靠。

7. 频繁提交与协作：
   - 频繁提交代码，提交信息需关联测试和功能点。
   - 定期团队评审测试用例，确保覆盖所有场景和边界。

8. 重构与信心：
   - 利用测试保障重构安全，重构后所有测试必须通过。
